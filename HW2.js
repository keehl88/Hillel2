// 'number' + 23 + 32
// Поєднання строки 'number' з числами 23 та 32
// 1. 'number' + 23 = 'number23'
// 2. 'number23' + 32 = 'number2332'
'number' + 23 + 32; // Результат: 'number2332'

// 41 + 1 + 'number'
// Додавання чисел 41 та 1, а потім конкатенація зі строкою 'number'
// 1. 41 + 1 = 42
// 2. 42 + 'number' = '42number'
41 + 1 + 'number'; // Результат: '42number'

// null + 1
// Додавання null та 1
// null при перетворенні на число стає 0
// 0 + 1 = 1
null + 1; // Результат: 1

// 'five' + + 'two'
// Конкатенація строки 'five' з результатом перетворення 'two' на число
// Вираз + 'two' веде до NaN (не число)
// 'five' + NaN = 'fiveNaN'
'five' + + 'two'; // Результат: 'fiveNaN'

// 2 && 7
// Логічне І (AND) між числами 2 та 7
// Повертає останнє значення, тут 7
2 && 7; // Результат: 7

// +'40' + +'2';
// Перетворення строк '40' та '2' на числа і їх додавання
// 1. +'40' = 40
// 2. +'2' = 2
// 3. 40 + 2 = 42
+'40' + +'2'; // Результат: 42

// '10' - 5 === 6;
// Вираз '10' - 5 обчислюється та порівнюється з числом 6
// 1. '10' перетворюється на 10
// 2. 10 - 5 = 5
// 3. 5 === 6 дорівнює false
'10' - 5 === 6; // Результат: false

// true + false
// Додавання логічних значень true та false
// true перетворюється на 1, а false на 0
// 1 + 0 = 1
true + false; // Результат: 1

// '4px' - 3
// Вираз '4px' - 3 намагається відняти 3 з неприпустимого числа
// Перетворення '4px' на число неможливе, отже результат - NaN (не число)
'4px' - 3; // Результат: NaN

// '4' - 3
// Віднімання числа 3 від строки '4'
// '4' перетворюється на число 4
// 4 - 3 = 1
'4' - 3; // Результат: 1

// '2' + 3 ** 2;
// Вираз '2' + 3 ** 2, де ** означає піднесення до степеня
// 1. 3 ** 2 = 9
// 2. '2' + 9 = '29'
'2' + 3 ** 2; // Результат: '29'

// 12 / '6'
// Ділення числа 12 на строку '6'
// '6' перетворюється на число 6
// 12 / 6 = 2
12 / '6'; // Результат: 2

// 23 + 42 + 'number'
// Поєднання чисел 23 та 42, а потім конкатенація зі строкою 'number'
// 1. 23 + 42 = 65
// 2. 65 + 'number' = '65number'
23 + 42 + 'number'; // Результат: '65number'

// '10' + (5 === 6);
// Перетворення рівності 5 === 6 в булеве значення false,
// а потім конкатенація зі строкою '10'
// '10' + false = '10false'
'10' + (5 === 6); // Результат: '10false'

// 'number' + 15 + 3
// Поєднання строки 'number' з числами 15 та 3
// 1. 'number' + 15 = 'number15'
// 2. 'number15' + 3 = 'number153'
'number' + 15 + 3; // Результат: 'number153'
